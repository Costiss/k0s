apiVersion: v1
kind: Namespace
metadata:
  name: vaultwarden
---
apiVersion: v1
kind: Secret
metadata:
  name: vaultwarden-secret
  namespace: vaultwarden
type: Opaque
data:
  admin-token: "${VAULTWARDEN_ADMIN_TOKEN}"
  database-url: "${VAULTWARDEN_DATABASE_URL}"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vaultwarden-pv
spec:
  storageClassName: ""
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/vaultwarden-data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-pvc
  namespace: vaultwarden
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
        - name: vaultwarden
          image: vaultwarden/server:1.33.1
          env:
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: admin-token
            - name: ADMIN_ENABLED
              value: "true"
            - name: DOMAIN
              value: https://${VAULTWARDEN_HOST}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: database-url
            - name: SIGNUPS_ALLOWED
              value: "false"
          ports:
            - containerPort: 80
            - containerPort: 3012
          volumeMounts:
            - name: vaultwarden-storage
              mountPath: /data
      volumes:
        - name: vaultwarden-storage
          persistentVolumeClaim:
            claimName: vaultwarden-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  type: ClusterIP
  selector:
    app: vaultwarden
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: websocket
      port: 3012
      targetPort: 3012
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vaultwarden-allow-web
  namespace: vaultwarden
spec:
  podSelector:
    matchLabels:
      app: vaultwarden
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector: {}
          podSelector: {}
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 3012
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-ingress
  namespace: vaultwarden
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
    - host: ${VAULTWARDEN_HOST}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  number: 80
